/**
 *找出一个二维数组中的鞍点，即该位置上的元素在该行上最大，在该列上最小。也可能没有鞍点。
 */
import java.util.Scanner;

public class Enjoyment {
	static int N = 4;
	static int M = 5;

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		int i,j,k,l,max,maxj,flag = 0;
		int a[][] = new int[N][M];
		System.out.println("please input matrix:");
		for(i = 0;i < N;i++)
			for(j = 0;j < M;j++)
				a[i][j] = input.nextInt();
		for(i = 0;i < N;i++){
			max = a[i][0];//开始时假设a[i][0]最大
			maxj = 0;//将列号0赋给maxj保存
			for(j = 0;j < M;j++)//找出第i行中最大的数
				if(a[i][j] > max){
					max = a[i][j];//将本行的最大数存放在max中
					maxj = j;//将最大数所在的列号存放在maxj中
				}
			flag = 1;//先假设是鞍点，以flag为1代表
			for(k = 0;k < N;k++)
				if(max > a[k][maxj]){//将最大数与其同列元素相比
					flag = 0;//如果max不是同列最小，表示不是鞍点
					continue;
				}
			if(flag == 1){
				System.out.printf("a[%d][%d] = %d\n",i,maxj,max);
				break;
			}
		}
		if(flag != 1){
			System.out.println("It is not exist!\n");
		}
	}
}
