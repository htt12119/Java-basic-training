path one:
public class MaxNumber {
	static int M = 1000;
	public static void main(String[] args) {
		int k1 = 0, k2 = 0, k3 = 0, k4 = 0, k5 = 0, k6 = 0, k7 = 0, k8 = 0, k9 = 0, k10 = 0;
		int i, a, n, s;
		for (a = 2; a <= M; a++) {// a是2~1000之间的整数，检查它是否是完数
			n = 0;// n用来累计a的因子的个数
			s = a;// s用来存放尚未求出的因子之和，开始时等于a
			for (i = 1; i < a; i++)// 检查i是否a的因子
				if (a % i == 0) {
					n++;// n加1，表示新找到的一个因子
					s = s - i;// s减去已找到的因子，s的新值是尚未求出的因子之和
					switch (n) {// 将找到的因子赋给k1~k9,或是10
					case 1:
						k1 = i;
						break;
					case 2:
						k2 = i;
						break;
					case 3:
						k3 = i;
						break;
					case 4:
						k4 = i;
						break;
					case 5:
						k5 = i;
						break;
					case 6:
						k6 = i;
						break;
					case 7:
						k7 = i;
						break;
					case 8:
						k8 = i;
						break;
					case 9:
						k9 = i;
						break;
					case 10:
						k10 = i;
						break;
					}
				}
			if (s == 0) {
				System.out.printf("%d,its factors are ", a);
				if (n > 1)
					System.out.print(k1 + "," + k2);// n>1表示a至少有2个因子
				if (n > 2)
					System.out.print("," + k3);// n>2表示至少有3个因子，故应再输出一个因子
				if (n > 3)
					System.out.print("," + k4);// n>3表示至少有4个因子，故应再输出一个因子
				if (n > 4)
					System.out.print("," + k5);
				if (n > 5)
					System.out.print("," + k6);
				if (n > 6)
					System.out.print("," + k7);
				if (n > 7)
					System.out.print("," + k8);
				if (n > 8)
					System.out.print("," + k10);
				System.out.println();
			}
		}
		System.out.println();
	}
}
path two:
public class MaxNumber {
	public static void main(String[] args) {
		int m,s,i;
		for(m = 2;m < 1000;m++){
			s = 0;
			for(i = 1;i < m;i++)
				if((m%i) == 0) s = s + i;
			if(s == m){
				System.out.print(m + ",its factors are ");
				for(i = 1;i < m;i++)
					if(m%i == 0) System.out.print(i + " ");
				System.out.println();
			}
		}
	}
}
